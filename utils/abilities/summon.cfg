#textdomain wesnoth-A_New_World

# ANW_GIVE_SUMMON SIDES ABILITY_ID TYPE K FILTER
# - SIDES: comma-separated sides (e.g., 2,3,4)
# - ABILITY_ID: simple identifier (no spaces), e.g., ANW_SUMMON_PEASANT
# - TYPE: unit type string; quote it if it has spaces, e.g., "Walking Corpse"
# - K: how many to summon each time the side starts its turn
# - FILTER: extra StandardUnitFilter bits that select *which units* receive the ability,
#           e.g.,  canrecruit=yes   or   id=Boss_Undead
#
# Example (leaders of side 2 summon 2 Ghouls):
#   {ANW_GIVE_SUMMON 2 ANW_SUMMON_GHOUL "Ghoul" 2 canrecruit=yes}
#
# Example (specific boss id on side 5 summons 1 Merman Hunter):
#   {ANW_GIVE_SUMMON 5 ANW_SUMMON_MERHUNTER "Merman Hunter" 1 id=Sea_Boss}

#define ANW_GIVE_SUMMON SIDES ABILITY_ID TYPE K FILTER
    # 1) Attach a visible dummy ability to matching units at start.
    [event]
        name=start
        first_time_only=yes
        [modify_unit]
            [filter]
                side={SIDES}
                {FILTER}
            [/filter]
            [object]
                id={ABILITY_ID}_OBJECT
                silent=yes
                duration=forever
                [effect]
                    apply_to=new_ability
                    [abilities]
                        [dummy]
                            id={ABILITY_ID}
                            name= _ "Summon: {TYPE}"
                            description= _ "At the start of this unit’s side turn, it summons {K} {TYPE}(s) on the nearest open, passable hex."
                        [/dummy]
                    [/abilities]
                [/effect]
            [/object]
        [/modify_unit]
    [/event]

    # 2) Keep ability present if leaders change (side turn re-apply safeguard).
    [event]
        name=side turn
        first_time_only=no
        [filter_side]
            side={SIDES}
        [/filter_side]

        # Re-attach object/ability to any matching unit that somehow lost it
        [modify_unit]
            [filter]
                side=$side_number
                {FILTER}
                [not]
                    [filter_wml]
                        [modifications]
                            [object]
                                id={ABILITY_ID}_OBJECT
                            [/object]
                        [/modifications]
                    [/filter_wml]
                [/not]
            [/filter]
            [object]
                id={ABILITY_ID}_OBJECT
                silent=yes
                duration=forever
                [effect]
                    apply_to=new_ability
                    [abilities]
                        [dummy]
                            id={ABILITY_ID}
                            name= _ "Summon: {TYPE}"
                            description= _ "At the start of this unit’s side turn, it summons {K} {TYPE}(s) on the nearest open, passable hex."
                        [/dummy]
                    [/abilities]
                [/effect]
            [/object]
        [/modify_unit]

        # 3) For each unit with the ability on this side, summon K units near it.
        [store_unit]
            variable=anw_summoners
            [filter]
                side=$side_number
                ability={ABILITY_ID}
            [/filter]
        [/store_unit]

        [foreach]
            array=anw_summoners
            [do]
                [for]
                    variable=i
                    start=1
                    end={K}
                    step=1
                    [do]
                        [unit]
                            type={TYPE}
                            side=$side_number
                            # Place at the summoner’s hex; engine relocates to nearest free passable.
                            x=$this_item.x
                            y=$this_item.y
                            placement=map
                            passable=yes
                        [/unit]
                    [/do]
                [/for]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE anw_summoners}
    [/event]
#enddef

# Convenience wrapper for the common case “leaders only”:
# ANW_GIVE_SUMMON_LEADER SIDES ABILITY_ID TYPE K
#define ANW_GIVE_SUMMON_LEADER SIDES ABILITY_ID TYPE K
    {ANW_GIVE_SUMMON {SIDES} {ABILITY_ID} {TYPE} {K} canrecruit=yes}
#enddef
